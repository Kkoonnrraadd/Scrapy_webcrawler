import scrapy
from scrapy import Request
from scrapy.loader import ItemLoader

#pierwszy wynik przejscia po 100 stronach  koniec: 16:02:35 poczatek: 16:01:47 przejscie    50 stron bez zadnych warunkow przy szukaniu, ilość pobranych recordów - w chuj
#to_do: dodaj z pliku starego webscrapera multitasking i loggin
#zmiana na spiderCrawl
class Product(scrapy.Item):
    title = scrapy.Field()
    ocena = scrapy.Field()
    ilosc_ocen=scrapy.Field()
    cena = scrapy.Field()
    decimal=scrapy.Field()
    cena_dostawa=scrapy.Field()
    sprzedawca=scrapy.Field()
    czas_wysylki=scrapy.Field()
    zwrot=scrapy.Field()

class ElectronicsSpider(scrapy.Spider):
    name = 'string_spider'
    allowed_domains = ["www.allegro.com.pl"]
    def start_requests(self):
#tutaj usera input bedzie przez format() laczony z adresem url
#stringg="lala" potem format()stringg input fro user
        usersinput = input("Enter string: ")
        urls=['https://allegro.pl/listing?string={}'.format(usersinput)]
        for url in urls:
            yield Request(url,callback=self.parse)

    def parse(self,response):
        for item in self.scrape(response):  #iterator
              yield item

        nexts = response.css('h2.ebc9be2 a::attr(href)').getall()# linki produktow
        for next in nexts:
            print("Found url: {}".format(next))
            yield Request(response.urljoin(next), callback=self.parse, dont_filter=True)    

    def scrape(self, response):
        item = Product()

        title=response.xpath("/html/body/div[2]/div[4]/div/div/div[2]/div/div/div/div/div/div[1]/div[2]/div[3]/h1/text()").get()
        ocena = response.xpath("/html/body/div[2]/div[4]/div/div/div[2]/div/div/div/div/div/div[1]/div[2]/div[4]/text()").get()
        ilosc_ocen=response.xpath("/html/body/div[2]/div[4]/div/div/div[2]/div/div/div/div/div/div[1]/div[2]/div[4]/a/text()").get()
        cena=response.xpath("/html/body/div[2]/div[4]/div/div/div[2]/div/div/div/div/div/div[1]/div[2]/div[4]/div/div/text()").get()
        decimal=response.xpath("/html/body/div[2]/div[4]/div/div/div[2]/div/div/div/div/div/div[1]/div[2]/div[4]/div/div/span/text()").get()
        sprzedawca=response.xpath("/html/body/div[2]/div[4]/div/div/div[2]/div/div/div/div/div/div[1]/div[2]/div[3]/a/text()").get()
        cena_dostawa=response.xpath("/html/body/div[2]/div[4]/div/div/div[2]/div/div/div/div/div/div[1]/div[2]/div[7]/div[1]/span[2]/text()").get()
        czas_wysylki=response.xpath("/html/body/div[2]/div[4]/div/div/div[2]/div/div/div/div/div/div[1]/div[2]/div[7]/div[2]/span[2]/text()").get()
        zwrot=response.xpath("/html/body/div[2]/div[4]/div/div/div[2]/div/div/div/div/div/div[1]/div[2]/div[7]/div[3]/span[2]/text()").get()


        item['title'] = title
        item['ocena'] = ocena
        item['ilosc_ocen']=ilosc_ocen
        item['cena'] = cena
        item['decimal'] = decimal
        item['sprzedawca']=sprzedawca
        item['cena_dostawa']=cena_dostawa
        item['czas_wysylki']=czas_wysylki
        item['zwrot']=zwrot

        print(item)

        #print("ITem: {} {} {} {} {} {} ".format( item['title'], item['ocena'],item['ilosc_ocen'],item['cena'] ,item['decimal'] ,item['sprzedawca']))
        yield item